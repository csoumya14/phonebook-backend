{"version":3,"sources":["services/persons.js","components/Person.js","components/personFilter.js","components/Form.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","console","log","post","id","put","delete","Person","person","deleteFunction","name","number","onClick","Persons","persons","searchString","deleteButton","length","filteredPersons","filter","p","toLowerCase","includes","map","key","Filter","handleSearchStringChange","value","onChange","Form","addName","handleNameChange","handleNumberChange","newName","newNumber","onSubmit","type","Notification","message","messageType","className","App","useState","setPersons","setNewName","setNewNumber","setSearchString","setMessage","setMessageType","useEffect","personService","initialPersons","resetNotification","showSuccessNotification","setTimeout","event","target","preventDefault","nameObject","existingPerson","find","window","confirm","numberToChange","n","changedNumber","returnedPerson","changeNumber","concat","personToRemove","catch","error","showErrorNotification","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e1aa7b0.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  console.log(`In person.create newObject: ${newObject}`);\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  console.log(`In person.update, id: ${id}, newObject: ${newObject}`);\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => response.data);\n};\n\nexport default { getAll, create, update, remove };\n","import React from \"react\";\n\nconst Person = ({ person, deleteFunction }) => {\n  return (\n    <tr>\n      <td>{person.name} </td>\n      <td>{person.number}</td>\n      <td>\n        <button onClick={deleteFunction}>Delete</button>\n      </td>\n    </tr>\n  );\n};\n\nconst Persons = ({ persons, searchString, deleteButton }) => {\n  if (persons.length === 0) {\n    return null;\n  }\n\n  const filteredPersons =\n    searchString === \"\"\n      ? persons\n      : persons.filter(p =>\n          p.name.toLowerCase().includes(searchString.toLowerCase())\n        );\n\n  const rows = () =>\n    filteredPersons.map(person => (\n      <Person\n        person={person}\n        key={person.id}\n        deleteFunction={() => deleteButton(person)}\n      />\n    ));\n\n  return (\n    <table>\n      <tbody>{rows()}</tbody>\n    </table>\n  );\n};\n\nexport default Persons;\n","import React from \"react\";\n\nconst Filter = ({ searchString, handleSearchStringChange }) => {\n  return (\n    <div>\n      filter shown with{\" \"}\n      <input value={searchString} onChange={handleSearchStringChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst Form = ({\n  addName,\n  handleNameChange,\n  handleNumberChange,\n  newName,\n  newNumber\n}) => {\n  return (\n    <form onSubmit={addName}>\n      <div>\n        name: <input onChange={handleNameChange} value={newName} />\n      </div>\n      <div>\n        number: <input onChange={handleNumberChange} value={newNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nconst Notification = ({ message, messageType }) => {\n  if (message === null || messageType == null) {\n    return null;\n  }\n\n  if (messageType === \"success\") {\n    return <div className=\"success\">{message}</div>;\n  }\n\n  if (messageType === \"error\") {\n    return <div className=\"error\">{message}</div>;\n  }\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from 'react';\nimport personService from './services/persons';\nimport Persons from './components/Person';\nimport Filter from './components/personFilter';\nimport Form from './components/Form';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [searchString, setSearchString] = useState('');\n  const [message, setMessage] = useState(null);\n  const [messageType, setMessageType] = useState(null);\n\n  useEffect(() => {\n    console.log('effect');\n    personService.getAll().then(initialPersons => {\n      console.log('promise fulfilled');\n      setPersons(initialPersons);\n    });\n  }, []);\n  console.log('render', persons.length, 'persons');\n\n  const resetNotification = () => {\n    setMessage(null);\n    setMessageType(null);\n  };\n\n  const showSuccessNotification = message => {\n    setMessage(message);\n    setMessageType('success');\n\n    setTimeout(() => resetNotification(), 5000);\n  };\n\n  const showErrorNotification = message => {\n    setMessage(message);\n    setMessageType('error');\n\n    setTimeout(() => resetNotification(), 3000);\n  };\n\n  const deleteButton = person => {\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      console.log(person.name);\n      const personToRemove = persons.find(p => p.id === person.id);\n      personService\n        .remove(person.id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== person.id));\n          showSuccessNotification(`Removed ${person.name}`);\n        })\n        .catch(error => {\n          setPersons(persons.filter(p => p.id !== person.id));\n          showErrorNotification(\n            `Information of ${personToRemove.name} has already been removed from server`,\n          );\n        });\n    }\n  };\n  const changeNumber = person => {\n    const numberToChange = persons.find(n => n.id === person.id);\n    const changedNumber = { ...numberToChange, number: newNumber };\n\n    personService.update(person.id, changedNumber).then(returnedPerson => {\n      setPersons(persons.map(p => (p.id !== person.id ? p : returnedPerson)));\n      setNewName('');\n      setNewNumber('');\n    });\n  };\n\n  const addName = event => {\n    event.preventDefault();\n    const nameObject = {\n      name: newName,\n      number: newNumber,\n      id: persons.length + 1,\n    };\n    console.log('persons', persons);\n    const existingPerson = persons.find(p => p.name.toLowerCase() === newName.toLowerCase());\n    if (existingPerson) {\n      console.log('In addName - in if  branch - persons', persons);\n      //window.alert(`${newName} is already added to phonebook`);\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`,\n        )\n      ) {\n        changeNumber(existingPerson);\n        showSuccessNotification(`The number of ${existingPerson.name} has been changed.`);\n      }\n    } else {\n      console.log('In addName - in else branch - persons', persons);\n      personService.create(nameObject).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        console.log('In addName - in else branch - persons', persons);\n        setNewName('');\n        setNewNumber('');\n        showSuccessNotification(`Successfully added ${returnedPerson.name}`);\n      });\n    }\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchStringChange = event => {\n    setSearchString(event.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} messageType={messageType} />\n      <Filter handleSearchStringChange={handleSearchStringChange} />\n      <h2>add a new</h2>\n      <Form\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        addName={addName}\n        newName={newName}\n        newNumber={newNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} searchString={searchString} deleteButton={deleteButton} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}